services:
  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sql_server
    environment:
      SA_PASSWORD: "YourStrong!Passw0rd"
      ACCEPT_EULA: "Y"
      MSSQL_PID: Developer
    ports:
      - "1433:1433"
    command:
      - /opt/mssql/bin/sqlservr
    volumes:
      - webrtcchatapp_sqlserver_data:/var/opt/mssql/data

  nginx:
    image: nginx
    ports:
      - "8083:8080"
    environment:
      - NGINX_ENVSUBST_TEMPLATE_SUFFIX=.conf
      - API_HOST:auth
      - USER_HOST:user
      - WEBCRTC_HOST:webrtc
    volumes:
      - ./nginx/templates:/etc/nginx/templates/
    depends_on:
      - auth
      - user
      - webrtc

  auth:
    build:
      context: .
      dockerfile: AuthenticationService/Dockerfile
    # ports:
    #   - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=db;Database=WebRTCChatDB;User Id=sa;Password=YourStrong!Passw0rd;Trusted_Connection=False;Encrypt=False;
    depends_on:
      - db

  user:
    build:
      context: .
      dockerfile: UserService/Dockerfile
    # ports:
    #   - "8081:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=db;Database=WebRTCChatDB;User Id=sa;Password=YourStrong!Passw0rd;Trusted_Connection=False;Encrypt=False;
    depends_on:
      - db

  webrtc:
    build:
      context: ./WebRTCService
      dockerfile: Dockerfile
    ports:
      - "8082:8080"
      - "5000:5000" # SignalR service
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - API_URL=http://webrtc:8080/api
    depends_on:
      - db

  signaling-service:
    build:
      context: ./SignalingService
    ports:
      - "5000:5000"

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    # ports:
    #   - "8084:8080"
    environment:
      - API_URL=http://webrtc:8080/api
    depends_on:
      - webrtc

volumes:
  webrtcchatapp_sqlserver_data:
  data-protection:
